//Our express application
const express = require('express');
const app = express();

//The i18n module is loaded
const i18n = require('i18n');

//Load handlebars engine and load our configuration from the file hbsconf.js under a libs folder at the same level of the application
const handlebars = require('express-handlebars').create(require('./libs/hbsconf.js'));

//Configure i18n module with a minimal configuration
i18n.configure({
    locales: ['en','es','de'], 
    //List of available languages
   
    cookie: 'locale', 
    //Name of the cookie this preference is going to be stored
    directory: __dirname + '/locales', 
    //Where the dictionaries will be stored
    //(This directory and the available dictionary JSON files are generated by the module automatically)
    defaultLocale: 'en',
    //Which will be the default language loaded if the language requested by the browser is not available

    // query parameter to switch locale (ie. /home?lang=ch) - defaults to NULL
    queryParameter: 'lang',

    // watch for changes in json files to reload locale on updates - defaults to false
    autoReload: true,
});

//Set our application to use our configured handlebars module as the view engine 
app.engine('handlebars', handlebars.engine);
app.set('view engine', 'handlebars');
//Set our application to use our configuration of the i18n module
app.use(i18n.init);
//Rest of the application

//Render
app.get('/', function (req, res) {
    res.render('home');
});

app.get('/page1', function (req, res) {
    res.render('page1');
});

//________________USE_EXPRESS____________________
app.use(express.static('client'));

//Listen to port
app.listen(3000, () => console.log('App listening on port 3000!'));